# 1 setup.http

# @import ./auth.http

#
# Warehause Definitions
# 

###
POST http://localhost:8000/api/warehausedefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Warehouse",
   "is_mobile": false,
   "is_storage": false,
   "is_permissive": false
}

> {%
   const responseData = response.body;
   wdef_warehouse = responseData.id;
%}

###
POST http://localhost:8000/api/warehausedefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Loading Area",
   "is_mobile": false,
   "is_storage": false,
   "is_permissive": false
}

> {%
   const responseData = response.body;
   wdef_loadingarea = responseData.id;
%}

###
POST http://localhost:8000/api/warehausedefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Bin",
   "is_mobile": false,
   "is_storage": true,
   "is_permissive": false
}

> {%
   const responseData = response.body;
   wdef_bin = responseData.id;
%}

###
POST http://localhost:8000/api/warehausedefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Package",
   "is_mobile": false,
   "is_storage": true,
   "is_permissive": true
}

> {%
   const responseData = response.body;
   wdef_package = responseData.id;
%}

###
POST http://localhost:8000/api/warehausedefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Transport",
   "is_mobile": true,
   "is_storage": false,
   "is_permissive": false
}

> {%
   const responseData = response.body;
   wdef_transport = responseData.id;
%}

###
GET http://localhost:8000/api/warehausedefs/
Content-Type: application/json
Authorization: Token {{authtoken}}


#
# Product Definitions
#

###
POST http://localhost:8000/api/productdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Chocolate Bar",
   "code_count": 1,
   "atomic": null,
   "is_fragile": true,
   "is_up": false,
   "is_expires": false,
   "weight": 0.2,
   "height": 0.025,
   "width": 0.025,
   "length": 0.1
}

> {%
   const responseData = response.body;
   pdef_chocolatebar = responseData.id;
%}

###
GET http://localhost:8000/api/productdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

#
# Event Definitions
#

###
POST http://localhost:8000/api/eventdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "PurchaseOrder",
   "is_batched": false,
   "proc_name": null
}

> {%
   const responseData = response.body;
   edef_purchaseorder = responseData.id;
%}

###
POST http://localhost:8000/api/eventdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "CustomerOrder"
}

> {%
   const responseData = response.body;
   edef_customerorder = responseData.id;
%}

###
POST http://localhost:8000/api/eventdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Inbound",
   "proc_name": "inbound"
}

> {%
   const responseData = response.body;
   edef_inbound = responseData.id;
%}

###
POST http://localhost:8000/api/eventdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Outbound",
   "proc_name": "outbound"
}

> {%
   const responseData = response.body;
   edef_outbound = responseData.id;
%}

###
POST http://localhost:8000/api/eventdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "key": "Transfer",
   "proc_name": "tasks.transfer"
}

> {%
   const responseData = response.body;
   edef_transfer = responseData.id;
%}

###
GET http://localhost:8000/api/eventdefs/
Content-Type: application/json
Authorization: Token {{authtoken}}

#
# Initial Environment
#

###
POST http://localhost:8000/api/warehausedefs/{{wdef_warehouse}}/do_spawn/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "value": "123 Moving Way, Sydney, NSW, Australia, 2000",
   "external_id": null,
   "schema": null,
   "options": null,
   "is_virtual": false,
   "user": null,
   "status": 3,
   "stock_min": null,
   "stock_max": null,
   "parent": null
}

> {%
   const responseData = response.body;
   w_warehouse = responseData.id;
%}

###
POST http://localhost:8000/api/warehausedefs/{{wdef_loadingarea}}/do_spawn/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "value": "Dock A",
   "parent_id": "{{w_warehouse}}"
}

> {%
   const responseData = response.body;
   w_docka = responseData.id;
%}

###
POST http://localhost:8000/api/warehausedefs/{{wdef_bin}}/do_spawn/
Content-Type: application/json
Authorization: Token {{authtoken}}

{
   "value": "A01-01-01",
   "parent_id": "{{w_warehouse}}"
}

> {%
   const responseData = response.body;
   w_bin = responseData.id;
%}

###
GET http://localhost:8000/api/warehauses/
Content-Type: application/json
Authorization: Token {{authtoken}}
